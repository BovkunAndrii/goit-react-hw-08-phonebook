{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/contactListItem.module.css","components/ContactList/contactList.module.css","components/Filter/filter.module.css","App.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getFilter","filter","isContactLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useSelector","useDispatch","useState","setName","setNumber","handleChange","e","target","onSubmit","contactName","preventDefault","some","alert","contactsOperations","className","styles","form","formLabel","formInput","type","pattern","title","required","onChange","buttonSubmit","ContactListItem","id","onDeletContact","contactListItem","buttonDelete","onClick","ContactList","contactList","map","Filter","filterLabel","filterInput","contactsAction","ContactsView","isLoadingContacts","useEffect","container","subtitle","color","height","width"],"mappings":"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","file":"static/js/4.65dd934e.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1UiZt\",\"formLabel\":\"ContactForm_formLabel__bQlx4\",\"formInput\":\"ContactForm_formInput__2r48A\",\"buttonSubmit\":\"ContactForm_buttonSubmit__15DwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__i0Mc0\",\"contact\":\"contactListItem_contact__2F1MN\",\"buttonDelete\":\"contactListItem_buttonDelete__3lJMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__1dOio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__20BEK\",\"filterInput\":\"filter_filterInput__1UbxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"html\":\"App_html__2V8OL\",\"container\":\"App_container__6Jq0t\",\"title\":\"App_title__3c3Hq\",\"subtitle\":\"App_subtitle__2GIgA\"};","// Модули\nimport axios from 'axios';\n\n// Компоненты\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-action';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(({ data }) => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createSelector } from 'reselect';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const isContactLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// export const getVisibleContacts = state => {\n//     const contacts = getContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//         contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n// };\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from '../ContactForm/ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const findByName = contactName => {\n    return contacts.some(({ name }) => name === contactName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findByName(name)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.formLabel}>\n        Name\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.formLabel}>\n        Number\n        <input\n          className={styles.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from '../ContactListItem/contactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id, onDeletContact }) => {\n  return (\n    <li className={styles.contactListItem}>\n      <p className={styles.contact}>\n        {' '}\n        {name}: {number}\n      </p>\n      <button\n        className={styles.buttonDelete}\n        type=\"button\"\n        onClick={() => onDeletContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from '../ContactList/contactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeletContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeletContact={() => onDeletContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import contactsAction from '../../redux/contacts/contacts-action';\nimport * as contactsAction from '../../redux/contacts/contacts-action';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nimport styles from '../Filter/filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(contactsAction.changeFilter(e.target.value));\n\n  return (\n    <label className={styles.filterLabel}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport contactsOperations from '../redux/contacts/contacts-operations';\nimport Loader from 'react-loader-spinner';\nimport { isContactLoading } from '../redux/contacts/contacts-selectors';\n\nimport styles from '../App.module.css';\n\nconst ContactsView = () => {\n  const isLoadingContacts = useSelector(isContactLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.subtitle}>Contacts</h2>\n      <Filter />\n      {isLoadingContacts && (\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}