{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","components/Loader.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js","redux/contacts/contacts-action.js","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/AppBar/AppBar.module.css","components/Container/Container.module.css"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","response","logIn","message","operations","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","console","log","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","rejected","style","activeLink","color","Navigation","useSelector","to","exact","className","styles","link","activeStyle","UserMenu","dispatch","useDispatch","container","Button","variant","type","button","onClick","AuthNav","AppBar","header","Container","children","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","PageLoader","height","width","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","items","createReducer","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","combineReducers","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction","module","exports"],"mappings":"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","file":"static/js/main.1cfeb5c4.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","// Модули\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\n// Компоненты\nimport { authSelectors } from '../../redux/auth';\n\n// Стили\nimport styles from '../Navigation/Navigation.module.css';\n\nconst style = {\n  // link: {\n  //   display: 'inline-block',\n  //   textDecoration: 'none',\n  //   padding: 12,\n  //   fontWeight: 700,\n  //   color: '#2A363B',\n  // },\n  activeLink: {\n    color: 'rgb(0 255 149)',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        className={styles.link}\n        activeStyle={style.activeLink}\n      >\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <>\n          <NavLink\n            to=\"/contacts\"\n            exact\n            className={styles.link}\n            activeStyle={style.activeLink}\n          >\n            Contacts\n          </NavLink>\n          {/* <NavLink\n            to=\"/upload\"\n            exact\n            style={styles.link}\n            activeStyle={styles.activeLink}\n          >\n            Загрузить\n          </NavLink> */}\n        </>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport Button from '@material-ui/core/Button';\n// import defaultAvatar from './default-avatar.png';\n\nimport styles from '../UserMenu/UserMenu.module.css';\n\n// const styles = {\n//   avatar: {\n//     marginRight: 4,\n//   },\n// }\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  // const avatar = defaultAvatar;\n\n  return (\n    <div className={styles.container}>\n      {/* <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} /> */}\n      <span className={styles.name}>Welcome, {name}</span>\n\n      <Button\n        variant=\"contained\"\n        // color=\"primary\"\n        type=\"button\"\n        className={styles.button}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Exit\n      </Button>\n      {/* <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Выйти\n      </button> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from '../AuthNav/AuthNav.module.css';\n\nconst style = {\n  activeLink: {\n    color: 'rgb(0 255 149)',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={styles.link}\n        activeStyle={style.activeLink}\n      >\n        Sign up\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={styles.link}\n        activeStyle={style.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nimport styles from '../AppBar/AppBar.module.css';\n\n// const styles = {\n//   header: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     borderBottom: '1px solid #2A363B',\n\n//   },\n// };\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","// Модули\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst PageLoader = () => (\n  <Loader type=\"ThreeDots\" color=\"rgb(179, 14, 170)\" height={80} width={80} />\n);\n\nexport default PageLoader;\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport Container from './components/Container';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\nimport PageLoader from './components/Loader';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n// const UploadView = lazy(() => import('./views/UploadView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  // const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    // isFetchingCurrentUser && (\n    <Container>\n      <AppBar />\n\n      <Switch>\n        <Suspense fallback={<PageLoader />}>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/todos\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Suspense>\n      </Switch>\n    </Container>\n    // )\n  );\n}\n","// Модули\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\n// Компоненты\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n} from './contacts-action';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducers from './contacts/contacts-reduser';\nimport { authReducer } from './auth';\n\nconst middleware = getDefaultMiddleware =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducers,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// Модули\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__12oC-\",\"name\":\"UserMenu_name__G0U_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__xqxo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3Wwlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__qlPHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2OnPB\"};"],"sourceRoot":""}